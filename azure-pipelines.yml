strategy:
  matrix:
    # Windows2019:
    #   Pool: 'azsdk-pool-mms-win-2019-general'
    #   OsVmImage: 'MMS2019'
    Windows2022:
      Pool: 'Azure Pipelines'
      OsVmImage: 'windows-2022'

pool:
  name: $(Pool)
  vmImage: $(OSVmImage)

variables:
  skipComponentGovernanceDetection: true
  NugetSecurityAnalysisWarningLevel: 'none'

steps:
  # - script: docker info
  #   displayName: docker info
  #   condition: succeededOrFailed()

  # - script: docker run -d --name squid-container -e TZ=UTC -p 3128:3128 ubuntu/squid
  #   displayName: docker run ubuntu/squid
  #   condition: succeededOrFailed()

  # - script: wsl --help
  #   displayName: wsl --help
  #   condition: succeededOrFailed()

  # - script: wsl --status
  #   displayName: wsl --status
  #   condition: succeededOrFailed()

  # - script: wsl -l -v
  #   displayName: wsl -l -v
  #   condition: succeededOrFailed()

  # - script: wsl --list --online
  #   displayName: wsl --list --online
  #   condition: succeededOrFailed()

  - script: wsl --install -d Ubuntu-20.04
    displayName: wsl --install -d Ubuntu-20.04
    condition: succeededOrFailed()

  # - script: wsl --status
  #   displayName: wsl --status
  #   condition: succeededOrFailed()

  - pwsh: |
      # wsl output is UTF-16, so the console encoding must be changed to correctly capture the output
      [console]::OutputEncoding = New-Object System.Text.UnicodeEncoding

      $wsl = wsl -l -v | out-string
      write-host $wsl

      while ($wsl -match 'installing') {
          start-sleep -seconds 1
          $wsl = wsl -l -v | out-string
          write-host $wsl
      }
    displayName: Wait until distro is running
    condition: succeededOrFailed()

  - script: wsl -e sudo apt-get -y install squid
    displayName: wsl -e sudo apt install squid
    condition: succeededOrFailed()

  - script: wsl -e sudo squid
    displayName: wsl -e sudo squid
    condition: succeededOrFailed()

  - script: wsl -e ps auxf
    displayName: wsl -e ps axuf
    condition: succeededOrFailed()

  - script: curl -v http://www.example.org
    displayName: curl -v http://www.example.org
    condition: succeededOrFailed()

  - script: curl -x http://localhost:3128 -v http://www.example.org
    displayName: curl -x http://localhost:3128 -v http://www.example.org
    condition: succeededOrFailed()

  # - script: wsl -e sudo apt install squid
  #   displayName: wsl -e sudo apt install squid
  #   condition: succeededOrFailed()

  # - script: wsl --status
  #   displayName: wsl --status
  #   condition: succeededOrFailed()

  # - script: wsl -l -v
  #   displayName: wsl -l -v
  #   condition: succeededOrFailed()

  # - script: wsl --install
  #   displayName: wsl --install
  #   condition: succeededOrFailed()

  # - script: wsl --update
  #   displayName: wsl --update
  #   condition: succeededOrFailed()

