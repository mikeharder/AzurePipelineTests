strategy:
  matrix:
    1ES:
      Pool: azsdk-pool-mms-win-2022-general
      # Pool: azsdk-pool-mms-win-2019-perf
      OSVmImage: windows-2022
    DevOps:
      Pool: Azure Pipelines
      OSVmImage: windows-2022

pool:
  name: $(Pool)
  vmImage: $(OSVmImage)

variables:
  skipComponentGovernanceDetection: true
  NugetSecurityAnalysisWarningLevel: 'none'

steps:
  # - script: |
  #     fsutil volume diskfree c:
  #     fsutil volume diskfree d:
  #     fsutil volume diskfree e:
  #   displayName: diskfree
  #   condition: succeededOrFailed()

  # - script: |
  #     dism /online /get-featureinfo /featurename:Microsoft-Windows-Subsystem-Linux
  #   displayName: dism
  #   condition: succeededOrFailed()

  - script: cmd.exe --version
    displayName: cmd.exe --version
    condition: succeededOrFailed()

  - script: wsl --status
    displayName: wsl --status
    condition: succeededOrFailed()

  # - script: wsl --set-default-version 2
  #   displayName: wsl --set-default-version 2
  #   condition: succeededOrFailed()

  # - script: wsl --status
  #   displayName: wsl --status
  #   condition: succeededOrFailed()

  # - script: wsl --update
  #   displayName: wsl --update
  #   condition: succeededOrFailed()

  - script: wsl -l -v
    displayName: wsl -l -v
    condition: succeededOrFailed()

  - script: wsl --install -d Ubuntu-20.04
    displayName: wsl --install -d Ubuntu-20.04
    condition: succeededOrFailed()

  - script: wsl -l -v
    displayName: wsl -l -v
    condition: succeededOrFailed()

  - pwsh: |
      Invoke-WebRequest -UseBasicParsing "https://raw.githubusercontent.com/microsoft/WSL/master/diagnostics/collect-wsl-logs.ps1" -OutFile collect-wsl-logs.ps1
      Set-ExecutionPolicy Bypass -Scope Process -Force
      .\collect-wsl-logs.ps1
    displayName: collect-wsl-logs
    condition: succeededOrFailed()

  # - script: ping 127.0.0.1 -n 120
  #   displayName: sleep 2 mins
  #   condition: succeededOrFailed()

  # - script: wsl --install -d Ubuntu-20.04
  #   displayName: wsl --install -d Ubuntu-20.04
  #   condition: succeededOrFailed()

  # - script: wsl --status
  #   displayName: wsl --status
  #   condition: succeededOrFailed()
