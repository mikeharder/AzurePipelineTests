strategy:
  matrix:
    # 1ESUbuntu2004:
    #   Pool: "azsdk-pool-mms-ubuntu-2004-general"
    #   OSVmImage: "ubuntu-20.04"
    # 1ESUbuntu2204:
    #   Pool: "azsdk-pool-mms-ubuntu-2204-general"
    #   OSVmImage: "ubuntu-22.04"
    # 1ESWindows2019:
    #   Pool: "azsdk-pool-mms-win-2019-general"
    #   OSVmImage: "windows-2019"
    # 1ESWindows2022:
    #   Pool: "azsdk-pool-mms-win-2022-general"
    #   OSVmImage: "windows-2022"
    # DevOpsUbuntu2004:
    #   Pool: Azure Pipelines
    #   OSVmImage: "ubuntu-20.04"
    DevOpsUbuntu2204:
      Pool: Azure Pipelines
      OSVmImage: ubuntu-22.04
    # DevOpsWindows2019:
    #   Pool: Azure Pipelines
    #   OSVmImage: "windows-2019"
    # DevOpsWindows2022:
    #   Pool: Azure Pipelines
    #   OSVmImage: "windows-2022"
    # DevOpsMac11:
    #   Pool: Azure Pipelines
    #   OSVmImage: "macos-11"
    # DevOpsMac12:
    #   Pool: Azure Pipelines
    #   OSVmImage: "macos-12"
    # DevOpsMac13:
    #   Pool: Azure Pipelines
    #   OSVmImage: "macos-13"
    # DevOpsMac13Arm64:
    #   Pool: Azure Pipelines
    #   OSVmImage: "macos-13-arm64"

pool:
  name: $(Pool)
  vmImage: $(OSVmImage)

variables:
  skipComponentGovernanceDetection: true
  NugetSecurityAnalysisWarningLevel: none
  system.debug: true

steps:
- task: PowerShell@2
  inputs:
    targetType: inline
    script: node -e "process.exit(19);"; write-output $LASTEXITCODE;
  continueOnError: true

- task: AzurePowerShell@5
  inputs:
    azurePowerShellVersion: LatestVersion
    azureSubscription: Azure SDK Developer Playground
    ScriptType: InlineScript
    Inline: node -e "process.exit(19);"; write-output $LASTEXITCODE;
  continueOnError: true
