strategy:
  matrix:
    # 1ESUbuntu2004:
    #   Pool: "azsdk-pool-mms-ubuntu-2004-general"
    #   OSVmImage: "ubuntu-20.04"
    # 1ESUbuntu2204:
    #   Pool: "azsdk-pool-mms-ubuntu-2204-general"
    #   OSVmImage: "ubuntu-22.04"
    # 1ESWindows2019:
    #   Pool: "azsdk-pool-mms-win-2019-general"
    #   OSVmImage: "windows-2019"
    # 1ESWindows2022:
    #   Pool: "azsdk-pool-mms-win-2022-general"
    #   OSVmImage: "windows-2022"
    # DevOpsUbuntu2004:
    #   Pool: Azure Pipelines
    #   OSVmImage: "ubuntu-20.04"
    DevOpsUbuntu2204:
      Pool: Azure Pipelines
      OSVmImage: "ubuntu-22.04"
    # DevOpsWindows2019:
    #   Pool: Azure Pipelines
    #   OSVmImage: "windows-2019"
    # DevOpsWindows2022:
    #   Pool: Azure Pipelines
    #   OSVmImage: "windows-2022"
    # DevOpsMac11:
    #   Pool: Azure Pipelines
    #   OSVmImage: "macos-11"
    # DevOpsMac13:
    #   Pool: Azure Pipelines
    #   OSVmImage: "macos-13"
    DevOpsMac14:
      Pool: Azure Pipelines
      OSVmImage: "macos-14"
    # DevOpsMac13Arm64:
    #   Pool: Azure Pipelines
    #   OSVmImage: "macos-13-arm64"

pool:
  name: $(Pool)
  vmImage: $(OSVmImage)

variables:
  skipComponentGovernanceDetection: true
  NugetSecurityAnalysisWarningLevel: 'none'
  system.debug: true

steps:
  - script: echo $(Agent.OS)
    displayName: print Agent.OS

  - script: uname -m
    displayName: uname -m

  - script: echo Linux
    condition: and(succeededOrFailed(), eq(variables['Agent.OS'], 'Linux'))
    displayName: Condition Linux

  - script: echo Windows
    condition: and(succeededOrFailed(), eq(variables['Agent.OS'], 'Windows_NT'))
    displayName: Condition Windows_NT

  - script: echo Mac
    condition: and(succeededOrFailed(), eq(variables['Agent.OS'], 'Darwin'))
    displayName: Condition Darwin

  # [macOS] OpenSSL 1.1 will be removed and OpenSSL 3 will be the default for all macOS images from November 4
  # https://github.com/actions/runner-images/issues/10817
  - script: |
      wget https://www.openssl.org/source/openssl-1.1.1w.tar.gz
      tar -xvf openssl-1.1.1w.tar.gz
      cd openssl-1.1.1w
      ./config --prefix=/usr/local/openssl
      make
      sudo make install
      export PATH=/usr/local/openssl/bin:$PATH
    condition: and(succeededOrFailed(), eq(variables['Agent.OS'], 'Darwin'))
    displayName: Install OpenSSL 1.1 manually

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.10'

  - script: |
      python --version
      pip --version
    displayName: 'Verify Python and Pip Version'